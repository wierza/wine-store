// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//Products model
model Product {
  id          String      @id @default(uuid())
  name        String
  photo       String
  price       Int
  description String

//Relations
  orderItems  OrderItem[]
  cartItems   CartItem[]
}

//Orders model
model Order {
  id          String      @id @default(uuid())
  date        DateTime
  totalPrice  Int
  comment     String?
  clientName  String?
  email       String?
  address     String?

  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

//Relations
  orderItems  OrderItem[]
  user        User        @relation(fields: [userId], references: [id])
  userId      String
}

//Products in Order model
model OrderItem {
  id          String   @id @default(uuid())
  quantity    Int
  price       Int
  comment     String?

//Relations
  order       Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId     String
  product     Product  @relation(fields: [productId], references: [id])
  productId   String
}

//Cart model
model Cart {
  id          String      @id @default(uuid())
  totalPrice  Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

//Relations
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String      @unique
  cartItems   CartItem[] 
}

//Products in cart model
model CartItem {
  id        String   @id @default(uuid())
  quantity  Int
  price     Int
  comment   String?

//Relations  
  cart      Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId    String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  
}

enum Role {
  USER
  ADMIN
}

//User model
model User {
  id       String    @id @default(uuid())
  email    String    @unique  
  password Password?
  role     Role      @default(USER)

  //Relations
  cart     Cart?    
  cartId   String?   @unique
  orders   Order[]
  
}

model Password {
  id             String @id @default(uuid())
  hashedPassword String
  user           User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         String @unique
}